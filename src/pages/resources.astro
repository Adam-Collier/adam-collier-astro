---
// import { Image } from '@astrojs/image/components'
import { getImage } from '@astrojs/image'
import { Image } from '@astrojs/image/components'
import Resources from '@components/Resources.svelte'
import Layout from '@layouts/Layout.astro'
import { toHTML } from 'src/utils/toHtml'
// import json from '../api/resources.json'

const response = await fetch(import.meta.env.STATIC_API + '/resources.json')
const json = await response.json()

const jsonData = json.data

type ResourceProps = {
  url: string
  title: string
  image: string
  content: string
  createdAt: string
  updatedAt: string
}

const resources = await Promise.all(
  jsonData.map(async (data: ResourceProps) => {
    const content = await toHTML(data.content.split(' - ')[2])

    return {
      ...data,
      image: data.image
        ? await getImage({
            src: data.image,
            width: 400,
            height: 209,
            format: 'avif',
          })
        : data.image,
      content,
    }
  }),
)
---

<Layout title="Resources" layoutCSS="bg-white/30 text-black/70">
  <Image
    src="/backgrounds/autumnal-peach-preview.png"
    format="avif"
    alt="background"
    width="1440"
    height="720"
    class="fixed left-0 top-0 h-full w-full -z-1"
  />
  <Resources resources={resources} client:load />
</Layout>
